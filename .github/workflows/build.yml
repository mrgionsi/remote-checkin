name: Build Flask and Angular with Docker

on:
  push:
    branches:
      - dev
    paths-ignore:  # Ignore documentation or non-code files (optional)
      - '**.md'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed  # Used for checking merges
  workflow_dispatch:  # Allow manual re-execution

jobs:
  build-flask:
    if: github.event_name != 'push' || github.event.pusher.name != 'github-actions[bot]'
    name: Build Flask Backend
    runs-on: ubuntu-latest
    environment: pre-prod  # Uses GitHub Environment secrets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r backend/requirements.txt

  build-angular:
    if: github.event_name != 'push' || github.event.pusher.name != 'github-actions[bot]'
    name: Build Angular Frontend
    runs-on: ubuntu-latest
    needs: build-flask
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build Angular app
        run: |
          cd frontend
          npm run build -- --configuration=preproduction

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: frontend/dist/
